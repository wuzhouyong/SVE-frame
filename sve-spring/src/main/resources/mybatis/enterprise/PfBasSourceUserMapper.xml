<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.enterprise.mapper.PfBasSourceUserMapper">

    <resultMap type="PfBasSourceUser" id="PfBasSourceUserResult">
        <result property="sourceUserId" column="source_user_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="password" column="password"/>
        <result property="userFlag" column="user_flag"/>
        <result property="memo" column="memo"/>
        <result property="sourceId" column="source_id"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="isBinding" column="is_binding"/>
        <result property="mobile" column="mobile"/>
    </resultMap>

    <sql id="selectPfBasSourceUserVo">
        select source_user_id, user_name, nick_name,source_id,password, user_flag, memo, del_flag, login_ip,
        login_date, create_by, create_time, update_by, update_time,is_binding,mobile
        from pf_bas_source_user
    </sql>

    <select id="selectPfBasSourceUserList" parameterType="PfBasSourceUser" resultMap="PfBasSourceUserResult">
        <include refid="selectPfBasSourceUserVo"/>
        <where>
            <if test="userName != null ">and user_name like concat('%', #{userName}, '%')</if>
            <if test="nickName != null ">and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="userFlag != null ">and user_flag like concat('%', #{userFlag}, '%')</if>
            <if test="memo != null ">and memo like concat('%', #{memo}, '%')</if>
            <if test="loginIp != null ">and login_ip like concat('%', #{loginIp}, '%')</if>
            <if test="loginDate != null ">and login_date like concat('%', #{loginDate}, '%')</if>
        </where>
    </select>

    <select id="selectPfBasSourceUserById" parameterType="Long" resultMap="PfBasSourceUserResult">
        <include refid="selectPfBasSourceUserVo"/>
        where source_user_id = #{sourceUserId}
    </select>

    <select id="selectPfBasSourceUserByUserId" parameterType="String" resultMap="PfBasSourceUserResult">
        <include refid="selectPfBasSourceUserVo"/>
        where user_name = #{userName}
    </select>

    <select id="selectPfBasSourceUserByMobile" parameterType="String" resultMap="PfBasSourceUserResult">
        <include refid="selectPfBasSourceUserVo"/>
        where mobile = #{mobile}
    </select>

    <select id="generateUserName" resultType="String">
        select getEnterUserId('') from dual
    </select>

    <insert id="insertPfBasSourceUser" parameterType="PfBasSourceUser">
        <selectKey keyProperty="sourceUserId" order="BEFORE" resultType="Long">
            select seq_pf_bas_source_user.nextval as sourceUserId from DUAL
        </selectKey>
        insert into pf_bas_source_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sourceUserId != null ">source_user_id,</if>
            <if test="nickName != null ">user_name,</if>
            <if test="nickName != null ">nick_name,</if>
            <if test="password != null ">password,</if>
            <if test="sourceId != null ">source_id,</if>
            <if test="userFlag != null ">user_flag,</if>
            <if test="memo != null ">memo,</if>
            <if test="delFlag != null ">del_flag,</if>
            <if test="loginIp != null ">login_ip,</if>
            <if test="loginDate != null ">login_date,</if>
            <if test="createBy != null ">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null ">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sourceUserId != null ">#{sourceUserId},</if>
            <if test="userName != null ">#{userName},</if>
            <if test="nickName != null ">#{nickName},</if>
            <if test="password != null ">#{password},</if>
            <if test="sourceId != null ">#{sourceId},</if>
            <if test="userFlag != null ">#{userFlag},</if>
            <if test="memo != null ">#{memo},</if>
            <if test="delFlag != null ">#{delFlag},</if>
            <if test="loginIp != null ">#{loginIp},</if>
            <if test="loginDate != null ">#{loginDate},</if>
            <if test="createBy != null ">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null ">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updatePfBasSourceUser" parameterType="PfBasSourceUser">
        update pf_bas_source_user
        <trim prefix="SET" suffixOverrides=",">
            user_name = #{userName, jdbcType=VARCHAR},
            nick_name = #{nickName, jdbcType=VARCHAR},
            password = #{password, jdbcType=VARCHAR},
            source_id = #{sourceId, jdbcType=VARCHAR},
            <if test="userFlag != null ">user_flag = #{userFlag},</if>
            memo = #{memo, jdbcType=VARCHAR},
            <if test="delFlag != null ">del_flag = #{delFlag},</if>
            login_ip = #{loginIp, jdbcType=VARCHAR},
            <if test="loginDate != null ">login_date = #{loginDate},</if>
            create_by = #{createBy, jdbcType=VARCHAR},
            <if test="createTime != null ">create_time = #{createTime},</if>
            update_by = #{updateBy, jdbcType=VARCHAR},
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where source_user_id = #{sourceUserId}
    </update>

    <update id="resetPasswordBySourceId" parameterType="PfBasSourceUser">
        update pf_bas_source_user
        <trim prefix="SET" suffixOverrides=",">
            password = #{password, jdbcType=VARCHAR},
            update_by = #{updateBy, jdbcType=VARCHAR},
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where source_id = #{sourceId}
    </update>

    <update id="changePasswordByName" parameterType="String">
        update pf_bas_source_user set password = #{password} where user_name = #{userName}
    </update>

    <delete id="deletePfBasSourceUserById" parameterType="Long">
        delete from pf_bas_source_user where source_user_id = #{sourceUserId}
    </delete>

    <delete id="deletePfBasSourceUserByIds" parameterType="String">
        delete from pf_bas_source_user where source_user_id in
        <foreach item="sourceUserId" collection="array" open="(" separator="," close=")">
            #{sourceUserId}
        </foreach>
    </delete>

    <select id="selectIsBinding" parameterType="String" resultType="int">
        select count(1) from pf_bas_source_user where mobile = #{phone,jdbcType=VARCHAR} and is_binding = 1
    </select>

    <update id="bindingForPhone" parameterType="String">
        update pf_bas_source_user set mobile = #{phone,jdbcType=VARCHAR}, is_binding = 1,update_time = sysdate
        where source_id = #{sourceId}
    </update>

    <update id="unbindingForPhone" parameterType="String">
        update pf_bas_source_user set mobile = null, is_binding = null,update_time = sysdate
        where source_id = #{sourceId}
    </update>

    <select id="selectEnterpriseUserByPhone" parameterType="String"
            resultType="com.ruoyi.project.enterprise.domain.PfBasSourceUser">
        select source_user_id sourceUserId,user_name userName,nick_name nickName,password,mobile
        from pf_bas_source_user
        where mobile = #{phone,jdbcType=VARCHAR} and is_binding = 1
    </select>

</mapper>