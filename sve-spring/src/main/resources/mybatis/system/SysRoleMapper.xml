<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.SysRoleMapper">

	<resultMap type="SysRole" id="SysRoleResult">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"    column="data_scope"     />
		<result property="status"       column="status"         />
		<result property="delFlag"      column="del_flag"       />
		<result property="createBy"     column="create_by"      />
		<result property="createTime"   column="create_time"    />
		<result property="updateBy"     column="update_by"      />
		<result property="updateTime"   column="update_time"    />
		<result property="remark"       column="remark"         />
	</resultMap>
	
	<sql id="selectRoleVo">
	    select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope,
            r.status, r.del_flag, r.create_time, r.remark 
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.role_id
	        left join sys_user u on u.user_id = ur.user_id
	        left join sys_dept d on u.dept_id = d.dept_id
    </sql>
    
    <select id="selectRoleList" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		where r.del_flag = '0'
		<if test="roleName != null and roleName != ''">
			AND r.role_name like '%'|| #{roleName}||'%'
		</if>
		<if test="status != null and status != ''">
			AND r.status = #{status}
		</if>
		<if test="roleKey != null and roleKey != ''">
			AND r.role_key like '%'|| #{roleKey}||'%'
		</if>
		<if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
			and r.create_time BETWEEN to_date(#{beginTime},'yyyy-MM-dd') and to_date(#{endTime},'yyyy-MM-dd') + 1
		</if>

		<!-- 数据范围过滤 -->
		${dataScope}
	</select>
    
	<select id="selectRolePermissionByUserId" parameterType="Long" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		WHERE r.del_flag = '0' and ur.user_id = #{userId}
	</select>
	
	<select id="selectRoleAll" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
	</select>
	
	<select id="selectRoleListByUserId" parameterType="Long" resultType="Integer">
		select r.role_id
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.role_id
	        left join sys_user u on u.user_id = ur.user_id
	    where u.user_id = #{userId}
	</select>
	
	<select id="selectRoleById" parameterType="Long" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		where r.role_id = #{roleId}
	</select>
	
	<select id="selectRolesByUserName" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		WHERE r.del_flag = '0' and u.user_name = #{userName}
	</select>
	
	<select id="checkRoleNameUnique" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		 where r.role_name=#{roleName}
	</select>
	
	<select id="checkRoleKeyUnique" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		 where r.role_key=#{roleKey}
	</select>
	
 	<insert id="insertRole" parameterType="SysRole" useGeneratedKeys="true" keyProperty="roleId">
		<selectKey keyProperty="roleId" order="BEFORE" resultType="Long">
			select seq_sys_role.nextval as roleId from DUAL
		</selectKey>
 		insert into sys_role(
 			<if test="roleId != null and roleId != 0">role_id,</if>
 			<if test="roleName != null and roleName != ''">role_name,</if>
 			<if test="roleKey != null and roleKey != ''">role_key,</if>
 			<if test="roleSort != null and roleSort != ''">role_sort,</if>
 			<if test="dataScope != null and dataScope != ''">data_scope,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="roleId != null and roleId != 0">#{roleId},</if>
 			<if test="roleName != null and roleName != ''">#{roleName},</if>
 			<if test="roleKey != null and roleKey != ''">#{roleKey},</if>
 			<if test="roleSort != null and roleSort != ''">#{roleSort},</if>
 			<if test="dataScope != null and dataScope != ''">#{dataScope},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate
 		)
	</insert>

	<update id="updateRole" parameterType="SysRole">
 		update sys_role
 		<set>
 			role_name = #{roleName,jdbcType=VARCHAR},
 			role_key = #{roleKey,jdbcType=VARCHAR},
 			role_sort = #{roleSort,jdbcType=VARCHAR},
 			data_scope = #{dataScope,jdbcType=CHAR},
 			status = #{status,jdbcType=CHAR},
 			remark = #{remark,jdbcType=VARCHAR},
 			update_by = #{updateBy,jdbcType=VARCHAR},
 			update_time = sysdate
 		</set>
 		where role_id = #{roleId}
	</update>
	
	<update id="updateRoleStatus" parameterType="SysRole">
 		update sys_role set status = #{status} where role_id = #{roleId}
	</update>
	
	<delete id="deleteRoleById" parameterType="Long">
 		delete from sys_role where role_id = #{roleId}
 	</delete>
 	
 	<delete id="deleteRoleByIds" parameterType="Long">
 	    update sys_role set del_flag = '2' where role_id in
 		<foreach collection="array" item="roleId" open="(" separator="," close=")">
 			#{roleId}
        </foreach> 
 	</delete>

	<!--新增平台任务-->
	<insert id="insertSysRoleTag" parameterType="SysRoleTag" >
		insert into sys_role_tag(
		<if test="roleTagId != null and roleTagId !=''">role_tag_id,</if>
		<if test="roleId != null and roleId != ''">role_id,</if>
		<if test="tagId != null and tagId != ''">tag_id,</if>
		<if test="createdBy != null and createdBy != ''">created_by,</if>
		<if test="updatedBy != null and updatedBy != ''">updated_by,</if>
		is_deleted,date_created,date_updated
		)values(
		<if test="roleTagId != null and roleTagId !=''">#{roleTagId,jdbcType=VARCHAR},</if>
		<if test="roleId != null and roleId != ''">#{roleId,jdbcType=VARCHAR},</if>
		<if test="tagId != null and tagId != ''">#{tagId,jdbcType=VARCHAR},</if>
		<if test="createdBy != null and createdBy !=''">#{createdBy,jdbcType=VARCHAR},</if>
		<if test="updatedBy != null and updatedBy !=''">#{updatedBy,jdbcType=VARCHAR},</if>
		0,sysdate,sysdate
		)
	</insert>

	<!--查询旧的任务ids-->
	<select id="selectTagIds" parameterType="long" resultType="string">
        select tag_id tagIds from sys_role_tag where role_id = #{roleId,jdbcType=VARCHAR} and is_deleted=0
    </select>

	<!--查询没被删除的关联关系-->
	<select id="selectSysRoleTag" parameterType="SysRoleTag" resultType="int">
        select count(1) from sys_role_tag
        where role_id = #{roleId,jdbcType=VARCHAR} and tag_id = #{tagId,jdbcType=VARCHAR} and is_deleted=1
    </select>

	<!--更新平台关系-->
	<update id="updateSysRoleTag" parameterType="SysRoleTag">
		update sys_role_tag
		<trim prefix="SET" suffixOverrides=",">
			<if test="isDeleted != null ">is_deleted = #{isDeleted,jdbcType=BIGINT},</if>
			<if test="updatedBy != null  and updatedBy != ''">updated_by = #{updatedBy,jdbcType=VARCHAR},</if>
			<if test="dateUpdated != null ">date_updated = #{dateUpdated,jdbcType=DATE},</if>
		</trim>
		where role_id = #{roleId} and tag_id = #{tagId}
	</update>
</mapper> 